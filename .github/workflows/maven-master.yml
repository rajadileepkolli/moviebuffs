name: Master Branch CI

on:
  push:
    branches:
      - 'master'

jobs:
  test:
    name: Unit & Integration Tests
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Cache SonarCloud packages
        uses: actions/cache@v2.1.6
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        run: mvn -B clean install -Pfull

      - name: SonarCloud Scan
        run: mvn -B sonar:sonar -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        working-directory: ./moviebuffs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [test]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v2.1.0
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v2.1.6
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Package with Maven
        run: mvn -B clean install -DskipTests --file pom.xml
        
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: dockertmt/moviebuffs
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}
          workdir: ./moviebuffs
          default_branch: master
          tags: "latest"
          buildoptions: "--compress --force-rm"
